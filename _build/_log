### Starting build.
# Target: gui.mli.depends, tags: { package(core), package(lablgtk2), package(ounit2), extension:mli, file:gui.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package core -package lablgtk2 -modules gui.mli > gui.mli.depends
# Target: gui.cmi, tags: { package(core), package(lablgtk2), package(ounit2), byte, compile, extension:mli, file:gui.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package core -package lablgtk2 -o gui.cmi gui.mli
+ ocamlfind ocamlc -c -package ounit2 -package core -package lablgtk2 -o gui.cmi gui.mli
ocamlfind: [WARNING] Package `threads': Linking problems may arise because of the missing -thread or -vmthread switch
# Target: gui.ml.depends, tags: { package(core), package(lablgtk2), package(ounit2), extension:ml, file:gui.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package core -package lablgtk2 -modules gui.ml > gui.ml.depends
# Target: gui.cmo, tags: { package(core), package(lablgtk2), package(ounit2), byte, compile, extension:cmo, extension:ml, file:gui.cmo, file:gui.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package core -package lablgtk2 -o gui.cmo gui.ml
+ ocamlfind ocamlc -c -package ounit2 -package core -package lablgtk2 -o gui.cmo gui.ml
ocamlfind: [WARNING] Package `threads': Linking problems may arise because of the missing -thread or -vmthread switch
File "gui.ml", line 24, characters 2-51:
24 |   editor_window#connect#destroy ~callback:Main.quit;
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Warning 10: this expression should have type unit.
File "gui.ml", lines 48-49, characters 2-31:
48 | ..factory#add_item "Save" ~key:_S ~callback:(fun () ->
49 |       failwith "unimplemented").
Warning 10: this expression should have type unit.
File "gui.ml", lines 50-54, characters 2-19:
50 | ..factory#add_item "Open file" ~key:_O ~callback:(fun () ->
51 |       insert_text
52 |         "Unimplemented, this string should come from a file read \
53 |          function"
54 |         text_field).
Warning 10: this expression should have type unit.
File "gui.ml", line 55, characters 2-53:
55 |   factory#add_item "Quit" ~key:_Q ~callback:Main.quit;
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Warning 10: this expression should have type unit.
File "gui.ml", lines 61-62, characters 2-31:
61 | ..factory#add_item "Theme name 1" ~callback:(fun () ->
62 |       failwith "unimplemented").
Warning 10: this expression should have type unit.
File "gui.ml", lines 63-64, characters 2-31:
63 | ..factory#add_item "Theme name 2" ~callback:(fun () ->
64 |       failwith "unimplemented").
Warning 10: this expression should have type unit.
File "gui.ml", lines 65-66, characters 2-31:
65 | ..factory#add_item "Custom Theme" ~callback:(fun () ->
66 |       failwith "unimplemented").
Warning 10: this expression should have type unit.
# Target: file.mli.depends, tags: { package(core), package(lablgtk2), package(ounit2), extension:mli, file:file.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package core -package lablgtk2 -modules file.mli > file.mli.depends
# Target: file.cmi, tags: { package(core), package(lablgtk2), package(ounit2), byte, compile, extension:mli, file:file.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package core -package lablgtk2 -o file.cmi file.mli
+ ocamlfind ocamlc -c -package ounit2 -package core -package lablgtk2 -o file.cmi file.mli
ocamlfind: [WARNING] Package `threads': Linking problems may arise because of the missing -thread or -vmthread switch
# Target: file.ml.depends, tags: { package(core), package(lablgtk2), package(ounit2), extension:ml, file:file.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package core -package lablgtk2 -modules file.ml > file.ml.depends
# Target: file.cmo, tags: { package(core), package(lablgtk2), package(ounit2), byte, compile, extension:cmo, extension:ml, file:file.cmo, file:file.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package core -package lablgtk2 -o file.cmo file.ml
+ ocamlfind ocamlc -c -package ounit2 -package core -package lablgtk2 -o file.cmo file.ml
ocamlfind: [WARNING] Package `threads': Linking problems may arise because of the missing -thread or -vmthread switch
# Target: author.mli.depends, tags: { package(core), package(lablgtk2), package(ounit2), extension:mli, file:author.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package core -package lablgtk2 -modules author.mli > author.mli.depends
# Target: author.cmi, tags: { package(core), package(lablgtk2), package(ounit2), byte, compile, extension:mli, file:author.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package core -package lablgtk2 -o author.cmi author.mli
+ ocamlfind ocamlc -c -package ounit2 -package core -package lablgtk2 -o author.cmi author.mli
ocamlfind: [WARNING] Package `threads': Linking problems may arise because of the missing -thread or -vmthread switch
# Target: author.ml.depends, tags: { package(core), package(lablgtk2), package(ounit2), extension:ml, file:author.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package core -package lablgtk2 -modules author.ml > author.ml.depends
# Target: author.cmo, tags: { package(core), package(lablgtk2), package(ounit2), byte, compile, extension:cmo, extension:ml, file:author.cmo, file:author.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package ounit2 -package core -package lablgtk2 -o author.cmo author.ml
+ ocamlfind ocamlc -c -package ounit2 -package core -package lablgtk2 -o author.cmo author.ml
ocamlfind: [WARNING] Package `threads': Linking problems may arise because of the missing -thread or -vmthread switch
# Compilation successful.
